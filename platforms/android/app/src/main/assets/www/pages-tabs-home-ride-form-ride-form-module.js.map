{"version":3,"sources":["webpack:///./src/app/pages/tabs/home/ride-form/ride-form.module.ts","webpack:///./src/app/pages/tabs/home/ride-form/ride-form.page.html","webpack:///./src/app/pages/tabs/home/ride-form/ride-form.page.scss","webpack:///./src/app/pages/tabs/home/ride-form/ride-form.page.ts"],"names":[],"mappings":"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","file":"pages-tabs-home-ride-form-ride-form-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {RideFormPage} from './ride-form.page';\nimport {AgmCoreModule} from '@agm/core';\nimport {AgmDirectionModule} from 'agm-direction';\nimport {CalendarModule} from 'ion2-calendar';\nimport {DatePickerComponent} from '../date-picker/date-picker.component';\nimport {DatePickerModule} from '../date-picker/date-picker.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RideFormPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ReactiveFormsModule,\n        CalendarModule,\n        DatePickerModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyBEavHbLwLZhyr1L8psKmof-84BlLqbRn8',\n            libraries: ['places']\n        }),\n        AgmDirectionModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [RideFormPage],\n    entryComponents: [DatePickerComponent]\n})\nexport class RideFormPageModule {\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title>Offer A Ride</ion-title>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <div class=\\\"form-content\\\">\\n        <form [formGroup]=\\\"rideForm\\\">\\n            <ion-item>\\n                <ion-icon name=\\\"locate\\\" color=\\\"primary\\\"></ion-icon>\\n                <input #searchOrigin (input)=\\\"clearLocationIfBlank($event.target.value, 'origin')\\\" formControlName=\\\"origin\\\"\\n                       placeholder=\\\"From\\\">\\n            </ion-item>\\n            <ion-item>\\n                <ion-icon name=\\\"pin\\\" color=\\\"primary\\\"></ion-icon>\\n                <input #searchDestination (input)=\\\"clearLocationIfBlank($event.target.value, 'destination')\\\"\\n                       formControlName=\\\"destination\\\" placeholder=\\\"To\\\">\\n            </ion-item>\\n            <ion-item (click)=\\\"openDatePicker($event)\\\">\\n                <ion-icon name=\\\"calendar\\\" color=\\\"primary\\\"></ion-icon>\\n                <ion-input formControlName=\\\"date\\\" placeholder=\\\"Date\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-icon name=\\\"clock\\\" color=\\\"primary\\\"></ion-icon>\\n                <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"HH:mm\\\" formControlName=\\\"time\\\" placeholder=\\\"Time\\\">\\n                </ion-datetime>\\n            </ion-item>\\n\\n            <ion-item (click)=\\\"showBasicPicker()\\\">\\n                <ion-icon name=\\\"people\\\" color=\\\"primary\\\"></ion-icon>\\n                <ion-input color=\\\"black\\\" formControlName=\\\"seatsNumber\\\" placeholder=\\\"Number of seats\\\"></ion-input>\\n            </ion-item>\\n\\n        </form>\\n    </div>\\n\\n        <ion-card>\\n\\n            <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"zoom\\\" [streetViewControl]=\\\"false\\\"\\n                     [zoomControl]=\\\"false\\\">\\n                <agm-direction *ngIf=\\\"direction\\\" [origin]=\\\"direction.origin\\\"\\n                               [destination]=\\\"direction.destination\\\"></agm-direction>\\n                <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" *ngIf=\\\"!direction\\\"></agm-marker>\\n            </agm-map>\\n\\n        </ion-card>\\n\\n    <ion-card-subtitle *ngIf=\\\"distance\\\">\\n        <ion-label>Distance: {{distance}}</ion-label>\\n        <ion-label>Duration: {{duration}}</ion-label>\\n    </ion-card-subtitle>\\n\\n<footer>\\n    <ion-toolbar position=\\\"bottom\\\">\\n\\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" (click)=\\\"createRide()\\\" *ngIf=\\\"!ride\\\"\\n                [disabled]=\\\"rideForm.invalid\\\">\\n        Done\\n    </ion-button>\\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" (click)=\\\"updateRide()\\\" *ngIf=\\\"ride\\\"\\n                [disabled]=\\\"rideForm.invalid\\\">\\n        Save\\n    </ion-button>\\n    </ion-toolbar>\\n</footer>\\n\\n</ion-content>\\n\"","module.exports = \"agm-map {\\n  height: 300px; }\\n\\nion-input {\\n  width: 100%;\\n  margin-left: 20px;\\n  font-family: system-ui;\\n  font-size: 16px; }\\n\\ninput {\\n  width: 100%;\\n  margin-left: 20px;\\n  font-family: system-ui;\\n  font-size: 16px; }\\n\\n.form-content {\\n  padding: 10px; }\\n\\nion-card-subtitle {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-justify-content: space-evenly;\\n          justify-content: space-evenly;\\n  margin-bottom: 10px; }\\n\\nfooter {\\n  position: fixed;\\n  bottom: 0px;\\n  right: 0;\\n  left: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25leWJhL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyL3RmbS9zcmMvYXBwL3BhZ2VzL3RhYnMvaG9tZS9yaWRlLWZvcm0vcmlkZS1mb3JtLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWEsRUFBQTs7QUFHZjtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UscUJBQWE7RUFBYixhQUFhO0VBQ2IscUNBQTZCO1VBQTdCLDZCQUE2QjtFQUM3QixtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLFFBQVE7RUFDUixPQUFPLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy90YWJzL2hvbWUvcmlkZS1mb3JtL3JpZGUtZm9ybS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhZ20tbWFwIHtcbiAgaGVpZ2h0OiAzMDBweDtcbn1cblxuaW9uLWlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbmlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5mb3JtLWNvbnRlbnR7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5cbmlvbi1jYXJkLXN1YnRpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbmZvb3RlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwcHg7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiAwO1xufVxuIl19 */\"","import {Component, ElementRef, NgZone, OnInit, ViewChild} from '@angular/core';\nimport {MapsAPILoader} from '@agm/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ride} from '../../../../shared/models/Ride';\nimport {RideService} from '../../../../core/services/ride.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport Autocomplete = google.maps.places.Autocomplete;\nimport Geocoder = google.maps.Geocoder;\nimport PlaceResult = google.maps.places.PlaceResult;\nimport DirectionsService = google.maps.DirectionsService;\nimport DirectionsRequest = google.maps.DirectionsRequest;\nimport {User} from '../../../../shared/models/User';\nimport {UserService} from '../../../../core/services/user.service';\nimport {DatePickerComponent} from '../date-picker/date-picker.component';\nimport {PickerController, PopoverController} from '@ionic/angular';\nimport * as moment from 'moment';\nimport { PickerOptions } from '@ionic/core';\n\n@Component({\n    selector: 'app-ride-form',\n    templateUrl: './ride-form.page.html',\n    styleUrls: ['./ride-form.page.scss'],\n})\nexport class RideFormPage implements OnInit {\n\n    @ViewChild('searchOrigin')\n    public searchOriginElementRef: ElementRef;\n    @ViewChild('searchDestination')\n    public searchDestinationElementRef: ElementRef;\n\n    public duration;\n    public distance;\n    public today = Date.now();\n    public ride: Ride;\n\n    private currentUser: User;\n    public rideForm: FormGroup;\n    public latitude: number;\n    private longitude: number;\n    private zoom: number;\n    private geoCoder;\n    private direction: DirectionsRequest;\n    private originLocation: PlaceResult;\n    private destinationLocation: PlaceResult;\n    private directionsService = new DirectionsService();\n\n    public constructor(\n        private mapsAPILoader: MapsAPILoader,\n        private ngZone: NgZone,\n        private fb: FormBuilder,\n        private rideService: RideService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private userService: UserService,\n        public popoverController: PopoverController,\n        private pickerCtrl: PickerController\n    ) {\n        this.currentUser = this.userService.user.getValue();\n\n        this.route.queryParams.subscribe(params => {\n            if (this.router.getCurrentNavigation().extras.state) {\n                this.ride = this.router.getCurrentNavigation().extras.state.ride;\n                this.getDirection();\n            }\n            this.createDirectionForm();\n        });\n\n    }\n\n    public ngOnInit(): void {\n        this.mapsAPILoader.load().then(() => {\n            this.setCurrentLocation();\n            const originAutoComplete = new Autocomplete(this.searchOriginElementRef.nativeElement, {});\n            const destinationAutocomplete = new Autocomplete(this.searchDestinationElementRef.nativeElement, {});\n            this.setListenerTo(originAutoComplete, 'origin');\n            this.setListenerTo(destinationAutocomplete, 'destination');\n        });\n    }\n\n    async showBasicPicker() {\n        const opts: PickerOptions = {\n            buttons: [\n                {\n                    text: 'Cancel',\n                    role: 'cancel'\n                },\n                {\n                    text: 'Done'\n                }\n            ],\n            columns: [\n                {\n                    name: 'number',\n                    options: [\n                        { text: '1', value: 1 },\n                        { text: '2', value: 2 },\n                        { text: '3', value: 3 },\n                        { text: '4', value: 4 },\n                        { text: '5', value: 5 },\n                        { text: '6', value: 6 }\n                    ]\n                }\n            ]\n        };\n        const picker = await this.pickerCtrl.create(opts);\n        picker.present();\n        picker.onDidDismiss().then(async data => {\n            const col = await picker.getColumn('number');\n            this.rideForm.get('seatsNumber').setValue(col.options[col.selectedIndex].value);\n        });\n    }\n\n    public createDirectionForm(): void {\n        this.rideForm = this.fb.group({\n            origin: [this.ride ? this.ride.originName : undefined, Validators.required],\n            destination: [this.ride ? this.ride.destinationName : undefined, Validators.required],\n            date: [this.ride ? moment(this.ride.dateTime).format('DD MMM YYYY') : null, Validators.required],\n            time: [this.ride ? moment(this.ride.dateTime).format('HH:mm') : null, Validators.required],\n            seatsNumber: [this.ride ? this.ride.numberOfSeats : null, Validators.required]\n        });\n    }\n\n    public async openDatePicker(event: any) {\n        const popover = await this.popoverController.create({\n            component: DatePickerComponent,\n            animated: true,\n            cssClass: 'date-picker-popover',\n            event\n        });\n        popover.onDidDismiss().then((dataReturned) => {\n            if (dataReturned !== null) {\n                this.rideForm.get('date').setValue(moment(dataReturned.data).format('DD MMM YYYY'));\n            }\n        });\n\n        return await popover.present();\n    }\n\n    private setListenerTo(autocomplete, type: string): void {\n        autocomplete.addListener('place_changed', () => {\n            this.ngZone.run(() => {\n                const place: PlaceResult = autocomplete.getPlace();\n\n                if (place.geometry === undefined || place.geometry === null) {\n                    return;\n                }\n                if (type === 'origin') {\n                    this.originLocation = place;\n                } else {\n                    this.destinationLocation = place;\n                }\n\n                if (this.originLocation && this.destinationLocation) {\n                    this.getDirection();\n                } else {\n                    this.latitude = place.geometry.location.lat();\n                    this.longitude = place.geometry.location.lng();\n                }\n                this.zoom = 12;\n            });\n        });\n    }\n\n    private setCurrentLocation(): void {\n        this.geoCoder = new Geocoder();\n        this.latitude = 28.1235459;\n        this.longitude = -15.436257399999931;\n        this.zoom = 12;\n        this.getAddress(this.latitude, this.longitude);\n    }\n\n    public getAddress(latitude, longitude): void {\n        this.geoCoder.geocode({location: {lat: latitude, lng: longitude}}, (results, status) => {\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n        });\n    }\n\n    public getDirection(): void {\n        this.direction = {\n            origin: this.ride ? this.ride.origin : this.originLocation.geometry.location.toJSON(),\n            destination: this.ride ? this.ride.destination : this.destinationLocation.geometry.location.toJSON(),\n            travelMode: google.maps.TravelMode.DRIVING\n        };\n\n        this.directionsService.route(this.direction, result => {\n            this.duration = result.routes[0].legs[0].duration.text;\n            this.distance = result.routes[0].legs[0].distance.text;\n        });\n    }\n\n    public clearLocationIfBlank(value, type: string): void {\n        if (type === 'origin' && !value) {\n            this.originLocation = undefined;\n            this.direction = undefined;\n        } else if (type === 'destination' && !value) {\n            this.destinationLocation = undefined;\n            this.direction = undefined;\n        }\n    }\n\n    public createRide(): void {\n        const time = moment(this.rideForm.get('time').value).format('HH:mm');\n        const date = new Date(this.rideForm.get('date').value).toDateString();\n        const dateTime: Date = new Date(`${date} ${time}`);\n        const ride: Ride = {\n            userId: this.currentUser.id,\n            originName: this.originLocation.name,\n            destinationName: this.destinationLocation.name,\n            origin: this.originLocation.geometry.location.toJSON(),\n            destination: this.destinationLocation.geometry.location.toJSON(),\n            dateTime: dateTime.getTime(),\n            numberOfSeats: this.rideForm.get('seatsNumber').value,\n            seatedUserIds: [],\n            isFinished: false\n        };\n        this.rideService.createRide(ride).then(result => this.router.navigateByUrl('tabs'));\n\n    }\n\n    public updateRide(): void {\n        const time = this.rideForm.get('time').value;\n        const date = this.rideForm.get('date').value;\n        const dateTime: Date = new Date(`${date} ${time}`);\n        console.log(dateTime);\n        const ride: Ride = {\n            id: this.ride.id,\n            userId: this.currentUser.id,\n            originName: this.rideForm.get('origin').value,\n            destinationName: this.rideForm.get('destination').value,\n            origin: this.originLocation ? this.originLocation.geometry.location.toJSON() : this.ride.origin,\n            destination: this.destinationLocation ? this.destinationLocation.geometry.location.toJSON() : this.ride.destination,\n            dateTime: dateTime.getTime(),\n            numberOfSeats: this.rideForm.get('seatsNumber').value,\n            seatedUserIds: [],\n            isFinished: false\n        };\n        this.rideService.updateRide(ride).then(result => this.router.navigateByUrl('tabs/tabs/rides'));\n    }\n\n}\n"],"sourceRoot":""}