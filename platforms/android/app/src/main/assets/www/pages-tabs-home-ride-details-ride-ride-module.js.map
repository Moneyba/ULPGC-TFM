{"version":3,"sources":["webpack:///./src/app/core/services/tracking.service.ts","webpack:///./src/app/pages/tabs/home/ride-details/ride/ride.module.ts","webpack:///./src/app/pages/tabs/home/ride-details/ride/ride.page.html","webpack:///./src/app/pages/tabs/home/ride-details/ride/ride.page.scss","webpack:///./src/app/pages/tabs/home/ride-details/ride/ride.page.ts"],"names":[],"mappings":"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","file":"pages-tabs-home-ride-details-ride-ride-module.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {Observable} from 'rxjs';\nimport {Tracking} from '../../shared/models/Tracking';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackingService {\n  private collectionEndPoint = 'tracking';\n\n  constructor(private db: AngularFireDatabase) { }\n\n  public saveTracking(tracking: Tracking): Promise<void> {\n    tracking.id = this.db.createPushId();\n    return this.db.object<Tracking>(`${this.collectionEndPoint}/${tracking.id}`).set(tracking);\n  }\n\n  public getTrackingsByUserId(userId: string): Observable<Tracking[]> {\n    return this.db.list<Tracking>(this.collectionEndPoint, ref => ref.orderByChild('user/id').equalTo(userId)).valueChanges();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RidePage } from './ride.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RidePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RidePage]\n})\nexport class RidePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>ride</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!--<ion-content>\\n  <div #map id=\\\"map\\\" [hidden]=\\\"!user\\\"></div>\\n\\n  <div *ngIf=\\\"user\\\">\\n\\n    <ion-item>\\n      <ion-label>User ID: {{ user.id }}</ion-label>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"block\\\" (click)=\\\"startTracking()\\\" *ngIf=\\\"!isTracking\\\">\\n      <ion-icon name=\\\"locate\\\" slot=\\\"start\\\"></ion-icon>\\n      Start Tracking\\n    </ion-button>\\n\\n    <ion-button expand=\\\"block\\\" (click)=\\\"stopTracking()\\\" *ngIf=\\\"isTracking\\\">\\n      <ion-icon name=\\\"hand\\\" slot=\\\"start\\\"></ion-icon>\\n      Stop Tracking\\n    </ion-button>\\n\\n    <ion-list>\\n      <ion-item-sliding *ngFor=\\\"let pos of locations | async\\\">\\n        <ion-item>\\n          <ion-label text-wrap>\\n            Lat: {{ pos.lat }}\\n            Lng: {{ pos.lng }}\\n            <p>\\n              {{ pos.timestamp | date:'short' }}\\n            </p>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item-options side=\\\"start\\\">\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteLocation(pos)\\\">\\n            <ion-icon name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon>\\n          </ion-item-option>\\n        </ion-item-options>\\n\\n      </ion-item-sliding>\\n    </ion-list>\\n\\n  </div>\\n</ion-content>-->\\n\\n<ion-content padding>\\n\\n  <ion-button (click)=\\\"startTracking()\\\" *ngIf=\\\"!isTracking\\\">\\n    <ion-icon name=\\\"locate\\\"></ion-icon>\\n    Start Tracking\\n  </ion-button>\\n  <ion-button  color=\\\"danger\\\" (click)=\\\"stopTracking()\\\" *ngIf=\\\"isTracking\\\">\\n    <ion-icon name=\\\"hand\\\"></ion-icon>\\n    Stop Tracking\\n  </ion-button>\\n\\n  <div #map id=\\\"map\\\"></div>\\n\\n  <ion-list>\\n    <ion-list-header>Previous Tracks</ion-list-header>\\n    <ion-item *ngFor=\\\"let route of previousTracks\\\">\\n      {{ route.finished | date }}, {{ route.path.length }} Waypoints\\n      <button ion-button clear item-end (click)=\\\"showHistoryRoute(route.path)\\\">View Route</button>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"#map {\\n  width: 100%;\\n  height: 300px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25leWJhL0RvY3VtZW50cy90Zm0vc3JjL2FwcC9wYWdlcy90YWJzL2hvbWUvcmlkZS1kZXRhaWxzL3JpZGUvcmlkZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFicy9ob21lL3JpZGUtZGV0YWlscy9yaWRlL3JpZGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuIl19 */\"","import {Component, ViewChild, ElementRef, OnInit} from '@angular/core';\n\nimport {Geolocation} from '@ionic-native/geolocation/ngx';\nimport {Platform} from '@ionic/angular';\nimport {Subscription} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {TrackingService} from '../../../../../core/services/tracking.service';\nimport {User} from '../../../../../shared/models/User';\nimport {Tracking} from '../../../../../shared/models/Tracking';\nimport {UserService} from '../../../../../core/services/user.service';\n\n\ndeclare var google;\n\n@Component({\n    selector: 'app-ride',\n    templateUrl: './ride.page.html',\n    styleUrls: ['./ride.page.scss'],\n})\nexport class RidePage implements OnInit {\n    user: User = null;\n\n    @ViewChild('map') mapElement: ElementRef;\n    map: any;\n    currentMapTrack = null;\n\n    isTracking = false;\n    trackedRoute = [];\n    previousTracks: Tracking[] = [];\n\n    positionSubscription: Subscription;\n    myMarker = new google.maps.Marker();\n\n    constructor(\n        private userService: UserService,\n        private plt: Platform,\n        private geolocation: Geolocation,\n        private trackingService: TrackingService\n    ) {\n\n        this.user = this.userService.user.getValue();\n    }\n\n    ngOnInit() {\n        this.getCurrentPosition();\n    }\n\n    getCurrentPosition() {\n        this.plt.ready().then(() => {\n            this.loadHistoricRoutes();\n\n            const mapOptions = {\n                zoom: 13,\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                mapTypeControl: false,\n                streetViewControl: false,\n                fullscreenControl: false\n            };\n            this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n\n            this.geolocation.getCurrentPosition().then(position => {\n                const latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                this.map.setCenter(latLng);\n                this.map.setZoom(16);\n                this.myMarker = new google.maps.Marker({\n                    position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),\n                    map: this.map,\n                });\n            }).catch((error) => {\n                console.log('Error getting location', error);\n            });\n        });\n    }\n\n\n    loadHistoricRoutes() {\n        this.trackingService.getTrackingsByUserId(this.user.id).subscribe(data => {\n            if (data) {\n                this.previousTracks = data;\n            }\n        });\n\n\n    }\n\n    startTracking() {\n        this.isTracking = true;\n        this.trackedRoute = [];\n\n        this.positionSubscription = this.geolocation.watchPosition()\n            .pipe(\n                filter((p) => p.coords !== undefined) // Filter Out Errors\n            )\n            .subscribe(data => {\n                setTimeout(() => {\n                    console.log(data.coords);\n                    const latLng = new google.maps.LatLng(data.coords.latitude, data.coords.longitude);\n                    this.myMarker.setPosition(latLng);\n                    this.map.setCenter(latLng);\n                    this.trackedRoute.push({lat: data.coords.latitude, lng: data.coords.longitude});\n                    this.redrawPath(this.trackedRoute);\n                }, 0);\n            });\n\n    }\n\n    redrawPath(path) {\n        if (this.currentMapTrack) {\n            this.currentMapTrack.setMap(null);\n        }\n\n        if (path.length > 1) {\n            this.currentMapTrack = new google.maps.Polyline({\n                path,\n                geodesic: true,\n                strokeColor: 'blue',\n                strokeOpacity: 1.0,\n                strokeWeight: 3\n            });\n            this.currentMapTrack.setMap(this.map);\n        }\n    }\n\n    stopTracking() {\n        const newRoute: Tracking = {userId: this.user.id, finished: new Date().getTime(), path: this.trackedRoute};\n        this.previousTracks.push(newRoute);\n        // this.storage.set('routes', this.previousTracks);\n\n        this.trackingService.saveTracking(newRoute);\n        this.isTracking = false;\n        this.positionSubscription.unsubscribe();\n        this.currentMapTrack.setMap(null);\n    }\n\n    showHistoryRoute(route) {\n        this.redrawPath(route);\n    }\n\n\n}\n"],"sourceRoot":""}