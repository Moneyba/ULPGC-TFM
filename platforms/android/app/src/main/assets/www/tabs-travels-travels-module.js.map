{"version":3,"sources":["webpack:///./src/app/pages/tabs/travels/travels-page.component.html","webpack:///./src/app/pages/tabs/travels/travels-page.component.scss","webpack:///./src/app/pages/tabs/travels/travels-page.component.ts","webpack:///./src/app/pages/tabs/travels/travels.module.ts"],"names":[],"mappings":"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","file":"tabs-travels-travels-module.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>\\n            Viajes\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" mode=\\\"md\\\">\\n        <ion-segment-button value=\\\"nextRides\\\" mode=\\\"md\\\" checked>\\n            <ion-label>Next Rides</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"history\\\" mode=\\\"md\\\">\\n            <ion-label>History Rides</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n\\n    <div *ngIf=\\\"currentSegment === 'nextRides'\\\">\\n        <ion-card *ngFor=\\\"let currentRide of currentRides\\\" (click)=\\\"goToRideDetailsPage(currentRide.ride, currentRide.type)\\\">\\n            <h3>{{currentRide.type}}</h3>\\n            <ion-card-subtitle>{{currentRide.ride.dateTime | date: 'dd MMM h:mm'}}</ion-card-subtitle>\\n            <ion-label>{{currentRide.ride.originName}}\\n                <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\n                {{currentRide.ride.destinationName}}</ion-label>\\n        </ion-card>\\n        <ion-label *ngIf=\\\"currentRides.length == 0\\\">You don't have any ride yet</ion-label>\\n    </div>\\n    <div *ngIf=\\\"currentSegment === 'history'\\\">\\n        <ion-card *ngFor=\\\"let oldRide of oldRides\\\" (click)=\\\"goToRideDetailsPage(oldRide.ride)\\\">\\n            <h3>{{oldRide.type}}</h3>\\n            <ion-card-subtitle>{{oldRide.ride.dateTime | date: 'dd MMM h:mm'}}</ion-card-subtitle>\\n            <ion-label>{{oldRide.ride.originName}}\\n                <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\n                {{oldRide.ride.destinationName}}</ion-label>\\n\\n        </ion-card>\\n        <ion-label *ngIf=\\\"oldRides.length == 0\\\">There are no old rides</ion-label>\\n    </div>\\n\\n</ion-content>\\n\"","module.exports = \".item {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-flex-direction: column;\\n          flex-direction: column; }\\n\\nion-card {\\n  border-top: 3px solid darkblue; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25leWJhL0RvY3VtZW50cy90Zm0vc3JjL2FwcC9wYWdlcy90YWJzL3RyYXZlbHMvdHJhdmVscy1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UscUJBQWE7RUFBYixhQUFhO0VBQ2IsOEJBQXNCO1VBQXRCLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLDhCQUE4QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFicy90cmF2ZWxzL3RyYXZlbHMtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLml0ZW17XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbmlvbi1jYXJkIHtcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIGRhcmtibHVlO1xufVxuIl19 */\"","import {Component} from '@angular/core';\nimport {RideService} from '../../../core/services/ride.service';\nimport {Request} from '../../../shared/models/Request';\nimport {User} from '../../../shared/models/User';\nimport {NavigationExtras, Router} from '@angular/router';\nimport {RequestService} from '../../../core/services/request.service';\nimport {Ride} from '../../../shared/models/Ride';\nimport {UserService} from '../../../core/services/user.service';\n\n@Component({\n    selector: 'app-travels',\n    templateUrl: 'travels-page.component.html',\n    styleUrls: ['travels-page.component.scss']\n})\n\nexport class TravelsPage {\n    public currentSegment = 'nextRides';\n    private currentUser: User;\n    public requests: Request[];\n    public rides: Ride[];\n\n    public today: number;\n\n\n    public currentRides = [];\n    public oldRides = [];\n\n    constructor(private rideService: RideService,\n                private requestService: RequestService,\n                private userService: UserService,\n                private router: Router) {\n        this.currentUser = this.userService.user.getValue();\n        console.log(this.currentUser);\n        this.getRides();\n        this.getRequests();\n        this.today = new Date().getTime();\n    }\n\n    segmentChanged(ev: any) {\n        this.currentSegment = ev.detail.value;\n    }\n\n    public getRides(): void {\n        this.rideService.getRidesByUserId(this.currentUser.id).subscribe(rides => {\n            rides.forEach((ride: Ride) => {\n                if (ride.dateTime >= this.today) {\n                    const currentRide = {ride, type: 'Offered Ride'};\n                    this.currentRides.push(currentRide);\n                } else {\n                    const oldRide = {ride, type: 'Offered Ride'};\n                    this.oldRides.push(oldRide);\n                }\n            });\n        });\n    }\n\n    public getRequests(): void {\n        this.requestService.getRequestsByUserId(this.currentUser.id).subscribe(requests => {\n            requests.forEach((request: Request) => {\n                if (request.ride.dateTime >= this.today) {\n                    const currentRide = {ride: request.ride, type: 'Requested Ride'};\n                    this.currentRides.push(currentRide);\n                } else {\n                    const oldRide = {ride: request.ride, type: 'Requested Ride'};\n                    this.oldRides.push(oldRide);\n                }\n            });\n        });\n    }\n\n    public goToRideDetailsPage(ride: Ride, type: string): void {\n        let isDriver = false;\n        if (type === 'Offered Ride') {\n            isDriver = true;\n        }\n        const navigationExtras: NavigationExtras = {\n            state: {\n                rideId: ride.id,\n                isDriver\n            }\n        };\n        this.router.navigate(['ride-plan'], navigationExtras);\n    }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TravelsPage } from './travels-page.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: TravelsPage }])\n  ],\n  declarations: [TravelsPage]\n})\nexport class TravelsPageModule {}\n"],"sourceRoot":""}