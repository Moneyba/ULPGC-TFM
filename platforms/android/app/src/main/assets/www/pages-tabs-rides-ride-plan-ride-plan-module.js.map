{"version":3,"sources":["webpack:///./src/app/core/services/ride.service.ts","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-plan.module.ts","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-plan.page.html","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-plan.page.scss","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-plan.page.ts","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-popover/ride-popover.component.html","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-popover/ride-popover.component.scss","webpack:///./src/app/pages/tabs/rides/ride-plan/ride-popover/ride-popover.component.ts"],"names":[],"mappings":"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","file":"pages-tabs-rides-ride-plan-ride-plan-module.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Ride} from '../../shared/models/Ride';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {Observable} from 'rxjs';\nimport {Request} from '../../shared/models/Request';\nimport {User} from '../../shared/models/User';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RideService {\n    private collectionEndPoint = 'rides';\n\n    constructor(private db: AngularFireDatabase) {\n    }\n\n    public createRide(ride: Ride): Promise<void> {\n        ride.id = this.db.createPushId();\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${ride.id}`).set(ride);\n    }\n\n    public updateRide(ride: Ride): Promise<void> {\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${ride.id}`).update(ride);\n    }\n\n    public deleteRide(rideId: string): Promise<void> {\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${rideId}`).remove();\n    }\n\n    public getRides(): Observable<Ride[]> {\n        return this.db.list<Ride>(this.collectionEndPoint, ref => ref.orderByChild('dateTime')\n            .startAt(new Date().getTime())).valueChanges();\n    }\n\n    public getRidesByUserId(userId: string): Observable<Ride[]> {\n        return this.db.list<Ride>(this.collectionEndPoint, ref => ref.orderByChild('userId').equalTo(userId)).valueChanges();\n    }\n\n    public getRide(rideId: string): Observable<Ride> {\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${rideId}`).valueChanges();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {RidePlanPage} from './ride-plan.page';\nimport {RidePopoverComponent} from './ride-popover/ride-popover.component';\nimport {AgmCoreModule} from '@agm/core';\nimport {AgmDirectionModule} from 'agm-direction';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RidePlanPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyBEavHbLwLZhyr1L8psKmof-84BlLqbRn8',\n            libraries: ['places']\n        }),\n        AgmDirectionModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [RidePlanPage, RidePopoverComponent],\n    entryComponents: [RidePopoverComponent]\n\n})\nexport class RidePlanPageModule {\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title>Ride Plan</ion-title>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-icon id=\\\"icon-more\\\" name=\\\"md-more\\\" slot=\\\"end\\\" (click)=\\\"presentPopover($event)\\\"></ion-icon>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card>\\n        <div class=\\\"map\\\">\\n            <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"zoom\\\" [streetViewControl]=\\\"false\\\"\\n                     [zoomControl]=\\\"false\\\">\\n                <agm-direction *ngIf=\\\"direction\\\" [origin]=\\\"direction.origin\\\"\\n                               [destination]=\\\"direction.destination\\\"></agm-direction>\\n                <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" *ngIf=\\\"!direction\\\"></agm-marker>\\n            </agm-map>\\n            <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n                <ion-fab-button>\\n                    <ion-icon name=\\\"pin\\\"></ion-icon>\\n                </ion-fab-button>\\n            </ion-fab>\\n        </div>\\n        <ion-item>\\n            <label>Date and time: {{ride?.dateTime | date:'dd MMM h:mm'}}</label>\\n        </ion-item>\\n        <ion-item>\\n            <label>{{ride?.originName}} - {{ride?.destinationName}}</label>\\n        </ion-item>\\n\\n        <ion-list>\\n            <ion-list-header>Passengers ({{passengers.length}} / {{ride?.numberOfSeats}})</ion-list-header>\\n            <ion-item class=\\\"card-driver-container\\\" *ngFor=\\\"let user of passengers\\\">\\n                <div class=\\\"user-info\\\"  (click)=\\\"goToUserDetailsPage(user?.id)\\\">\\n                    <ion-avatar>\\n                        <img [src]=\\\"user?.photo\\\">\\n                    </ion-avatar>\\n                    <ion-label>\\n                        {{user?.name}}\\n                    </ion-label>\\n                </div>\\n\\n                <div class=\\\"request-buttons-container\\\">\\n\\n                    <ion-chip color=\\\"danger\\\" (click)=\\\"presentAlertConfirm(user)\\\">\\n                        <ion-label>Remove</ion-label>\\n                    </ion-chip>\\n                </div>\\n            </ion-item>\\n\\n            <ion-item *ngIf=\\\"!ride?.seatedUserIds\\\">\\n                <ion-label>No passengers</ion-label>\\n            </ion-item>\\n        </ion-list>\\n        <div class=\\\"footer\\\" *ngIf=\\\"ride?.seatedUserIds\\\">\\n            <ion-button (click)=\\\"openModal()\\\">Start ride</ion-button>\\n        </div>\\n    </ion-card>\\n\\n    <ion-card mode=\\\"md\\\" *ngIf=\\\"requests\\\">\\n        <ion-card-content>\\n            <ion-list>\\n                <ion-list-header>Requests</ion-list-header>\\n                <ion-item class=\\\"card-driver-container\\\" *ngFor=\\\"let request of requests\\\">\\n                    <div class=\\\"user-info\\\" (click)=\\\"goToUserDetailsPage(request.userId)\\\">\\n                        <ion-avatar>\\n                            <img [src]=\\\"request.user?.photo\\\">\\n                        </ion-avatar>\\n                        <label>{{request.user?.name}}</label>\\n                        <label> <a> Status: </a>{{request.state}}</label>\\n                    </div>\\n\\n                    <div class=\\\"request-buttons-container\\\" >\\n\\n                        <ion-icon (click)=\\\"acceptBooking(request)\\\" class=\\\"accept-button\\\" name=\\\"checkmark\\\"\\n                                  color=\\\"success\\\" *ngIf=\\\"request.state === 'PENDING'\\\"></ion-icon>\\n                        <ion-icon name=\\\"close\\\" color=\\\"danger\\\" (click)=\\\"refuseBooking(request)\\\"\\n                                  *ngIf=\\\"request.state === 'PENDING'\\\"></ion-icon>\\n\\n                        <ion-chip color=\\\"success\\\" (click)=\\\"acceptBooking(request)\\\" *ngIf=\\\"request.state === 'REFUSED'\\\">\\n                            <ion-label>Accept</ion-label>\\n                        </ion-chip>\\n\\n                    </div>\\n                </ion-item>\\n            </ion-list>\\n        </ion-card-content>\\n    </ion-card>\\n</ion-content>\\n\"","module.exports = \":host .card-driver-container {\\n  display: -webkit-flex;\\n  display: flex; }\\n\\n:host agm-map {\\n  height: 300px; }\\n\\n:host .card-driver-container {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-justify-content: space-between;\\n          justify-content: space-between; }\\n\\n:host .card-driver-container .user-info {\\n    display: -webkit-flex;\\n    display: flex;\\n    -webkit-align-items: center;\\n            align-items: center;\\n    width: 100%; }\\n\\n:host .card-driver-container .user-info ion-avatar {\\n      width: 35px;\\n      height: 35px; }\\n\\n:host .card-driver-container .user-info label {\\n      margin-left: 10px; }\\n\\n:host .footer {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-justify-content: center;\\n          justify-content: center;\\n  -webkit-align-items: center;\\n          align-items: center;\\n  margin: 10px; }\\n\\n:host .request-buttons-container {\\n  display: -webkit-flex;\\n  display: flex; }\\n\\n:host .request-buttons-container .accept-button {\\n    --background: #0ec254;\\n    text-align: center; }\\n\\n:host .request-buttons-container ion-icon {\\n    font-size: 25px; }\\n\\n:host #icon-more {\\n  font-size: 20px;\\n  margin-right: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25leWJhL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyL3RmbS9zcmMvYXBwL3BhZ2VzL3RhYnMvcmlkZXMvcmlkZS1wbGFuL3JpZGUtcGxhbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHSSxxQkFBYTtFQUFiLGFBQWEsRUFBQTs7QUFIakI7RUFPSSxhQUFhLEVBQUE7O0FBUGpCO0VBV0kscUJBQWE7RUFBYixhQUFhO0VBQ2Isc0NBQThCO1VBQTlCLDhCQUE4QixFQUFBOztBQVpsQztJQWVNLHFCQUFhO0lBQWIsYUFBYTtJQUNiLDJCQUFtQjtZQUFuQixtQkFBbUI7SUFDbkIsV0FBVyxFQUFBOztBQWpCakI7TUFvQlEsV0FBVztNQUNYLFlBQVksRUFBQTs7QUFyQnBCO01BeUJRLGlCQUFpQixFQUFBOztBQXpCekI7RUErQkkscUJBQWE7RUFBYixhQUFhO0VBQ2IsK0JBQXVCO1VBQXZCLHVCQUF1QjtFQUN2QiwyQkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLFlBQVksRUFBQTs7QUFsQ2hCO0VBc0NJLHFCQUFhO0VBQWIsYUFBYSxFQUFBOztBQXRDakI7SUF5Q00scUJBQWE7SUFDYixrQkFBa0IsRUFBQTs7QUExQ3hCO0lBNkNNLGVBQWUsRUFBQTs7QUE3Q3JCO0VBbURJLGVBQWU7RUFDZixpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RhYnMvcmlkZXMvcmlkZS1wbGFuL3JpZGUtcGxhbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG5cbiAgLmNhcmQtZHJpdmVyLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIGFnbS1tYXAge1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cblxuICAuY2FyZC1kcml2ZXItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgIC51c2VyLWluZm8ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgaW9uLWF2YXRhciB7XG4gICAgICAgIHdpZHRoOiAzNXB4O1xuICAgICAgICBoZWlnaHQ6IDM1cHg7XG4gICAgICB9XG5cbiAgICAgIGxhYmVsIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbjogMTBweDtcbiAgfVxuXG4gIC5yZXF1ZXN0LWJ1dHRvbnMtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgLmFjY2VwdC1idXR0b24ge1xuICAgICAgLS1iYWNrZ3JvdW5kOiAjMGVjMjU0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICBpb24taWNvbiB7XG4gICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgfVxuICB9XG5cblxuICAjaWNvbi1tb3JlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIH1cblxufVxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {Ride} from '../../../../shared/models/Ride';\nimport {Request} from '../../../../shared/models/Request';\nimport {RideService} from '../../../../core/services/ride.service';\nimport {RequestService} from '../../../../core/services/request.service';\nimport {State} from '../../../../shared/ui.utils';\nimport {RidePage} from '../ride/ride.page';\nimport {AlertController, ModalController, PopoverController, ToastController} from '@ionic/angular';\nimport {User} from '../../../../shared/models/User';\nimport {UserService} from '../../../../core/services/user.service';\nimport {RidePopoverComponent} from './ride-popover/ride-popover.component';\nimport DirectionsRequest = google.maps.DirectionsRequest;\nimport DirectionsService = google.maps.DirectionsService;\nimport {MapsAPILoader} from '@agm/core';\n\n@Component({\n    selector: 'app-ride-plan',\n    templateUrl: './ride-plan.page.html',\n    styleUrls: ['./ride-plan.page.scss'],\n})\nexport class RidePlanPage implements OnInit {\n    public ride: Ride = null;\n    public request: Request = null;\n    public rideTimeDate;\n    public driver: User;\n    public passengers: User[] = [];\n\n    public requests = [];\n\n    public currentUser: User;\n\n    dataReturned: any;\n\n    public latitude: number;\n    public longitude: number;\n    public zoom: number;\n    public direction: DirectionsRequest;\n    private directionsService = new DirectionsService();\n    public duration;\n    public distance;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private rideService: RideService,\n                private requestSerivce: RequestService,\n                private modalController: ModalController,\n                private userService: UserService,\n                private requestService: RequestService,\n                public popoverController: PopoverController,\n                private mapsAPILoader: MapsAPILoader,\n                private alertController: AlertController) {\n        this.currentUser = this.userService.user.getValue();\n        this.route.queryParams.subscribe(params => {\n\n            if (this.router.getCurrentNavigation().extras.state) {\n                const rideId = this.router.getCurrentNavigation().extras.state.rideId;\n                this.getRide(rideId);\n\n            }\n        });\n\n\n    }\n\n    ngOnInit() {\n\n    }\n\n\n\n    public getDirection(): void {\n        this.direction = {\n            origin: this.ride.origin,\n            destination: this.ride.destination,\n            travelMode: google.maps.TravelMode.DRIVING\n        };\n\n        this.directionsService.route(this.direction, result => {\n            this.duration = result.routes[0].legs[0].duration.text;\n            this.distance = result.routes[0].legs[0].distance.text;\n        });\n    }\n\n    private getRide(rideId: string) {\n        this.rideService.getRide(rideId).subscribe(ride => {\n            this.ride = ride;\n            this.rideTimeDate = new Date(this.ride.dateTime);\n            this.getPassengers();\n            this.getRequests();\n            this.mapsAPILoader.load().then(() => {\n                this.getDirection();\n            });\n        });\n    }\n\n    private getPassengers(): void {\n        this.passengers = [];\n        if (this.ride.seatedUserIds) {\n            this.ride.seatedUserIds.forEach((userId, index) => {\n                this.userService.getUser(userId).subscribe(user => this.passengers[index] = user);\n            });\n        }\n    }\n\n    public goToUserDetailsPage(userId: string): void {\n        const navigationExtras: NavigationExtras = {\n            state: {\n                userId\n            }\n        };\n        this.router.navigate(['public-profile'], navigationExtras);\n    }\n\n    public editRide(): void {\n        const navigationExtras: NavigationExtras = {\n            state: {\n                ride: this.ride\n            }\n        };\n        this.router.navigate(['ride-form'], navigationExtras);\n\n    }\n\n\n    async openModal() {\n        const modal = await this.modalController.create({\n            component: RidePage,\n            componentProps: {\n                ride: this.ride\n            }\n        });\n\n\n        modal.onDidDismiss().then((dataReturned) => {\n            if (dataReturned !== null) {\n                this.dataReturned = dataReturned.data;\n                // alert('Modal Sent Data :'+ dataReturned);\n            }\n        });\n\n        return await modal.present();\n    }\n\n\n    public acceptBooking(request: Request): void {\n        console.log(request.ride.numberOfSeats);\n        if (this.ride.numberOfSeats > this.passengers.length) {\n            if (!this.ride.seatedUserIds) {\n                this.ride.seatedUserIds = [];\n            }\n            this.ride.seatedUserIds.push(request.userId);\n            request.state = State.accepted;\n            request.ride = this.ride;\n            this.requestService.updateRequest(request);\n            this.rideService.updateRide(this.ride).then(() => this.getRide(this.ride.id));\n\n        }\n    }\n\n    public refuseBooking(request: Request): void {\n        request.state = State.refused;\n        this.requestService.updateRequest(request);\n    }\n\n    public deleteUserFromRide(user: User): void {\n       this.requests.forEach((request: Request) => {\n           if (request.userId === user.id) {\n               request.state = State.refused;\n               request.ride = this.ride;\n               this.requestService.updateRequest(request);\n               this.ride.seatedUserIds = this.ride.seatedUserIds.filter(userId => userId !== user.id);\n               this.rideService.updateRide(request.ride).then(() => this.getRide(this.ride.id));\n           }\n       });\n    }\n\n    public   async presentAlertConfirm(user) {\n        const alert = await this.alertController.create({\n            header: 'Remove Passenger',\n            message: 'Are you sure you want to remove this passenger?',\n            buttons: [\n                {\n                    text: 'No',\n                    role: 'cancel',\n                    cssClass: 'secondary',\n                    handler: (blah) => {\n                        console.log('Confirm Cancel: blah');\n                    }\n                }, {\n                    text: 'Yes',\n                    handler: () => {\n                        this.deleteUserFromRide(user);\n                    }\n                }\n            ]\n        });\n\n        await alert.present();\n    }\n\n\n    public getRequests(): void {\n        this.requestService.getRequestsByRideId(this.ride.id).subscribe(requests => {\n                this.requests = requests;\n                requests.forEach((request: Request, index) => this.getUser(request.userId, index));\n                console.log(requests);\n            }\n        );\n    }\n\n    public getUser(userId, index): void {\n        console.log(userId);\n        this.userService.getUser(userId).subscribe(user => this.requests[index].user = user);\n    }\n\n    public goToChatNotification(notification: Request): void {\n        const navigationExtras: NavigationExtras = {\n            state: {\n                notification\n            }\n        };\n        this.router.navigate(['notification'], navigationExtras);\n    }\n\n    public async presentPopover(event: any) {\n        const popover = await this.popoverController.create({\n            component: RidePopoverComponent,\n            event,\n            componentProps: {\n                ride: this.ride\n            }\n\n        });\n        return await popover.present();\n    }\n\n}\n","module.exports = \"<ion-list>\\n  <ion-list-header>Ride options</ion-list-header>\\n  <ion-item button (click)=\\\"editRide()\\\">Edit Ride</ion-item>\\n  <ion-item button (click)=\\\"presentAlertConfirm()\\\">Delete Ride</ion-item>\\n</ion-list>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RhYnMvcmlkZXMvcmlkZS1wbGFuL3JpZGUtcG9wb3Zlci9yaWRlLXBvcG92ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {NavigationExtras, Router} from '@angular/router';\nimport {AlertController, NavParams, PopoverController} from '@ionic/angular';\nimport {Ride} from '../../../../../shared/models/Ride';\nimport {RideService} from '../../../../../core/services/ride.service';\n\n@Component({\n  selector: 'app-ride-popover',\n  templateUrl: './ride-popover.component.html',\n  styleUrls: ['./ride-popover.component.scss'],\n})\nexport class RidePopoverComponent implements OnInit {\n\n  private ride: Ride\n\n  constructor(private router: Router,\n              private navParams: NavParams,\n              private popoverController: PopoverController,\n              private rideService: RideService,\n              private alertController: AlertController) {\n    this.ride = this.navParams.data.ride;\n  }\n\n  ngOnInit() {}\n\n  public editRide(): void {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        ride: this.ride\n      }\n    };\n    this.popoverController.dismiss();\n\n    this.router.navigate(['ride-form'], navigationExtras);\n  }\n\n  public deleteRide(): void {\n    if (this.ride.seatedUserIds) {\n      // Send notification to passengers\n    }\n    this.popoverController.dismiss();\n    this.rideService.deleteRide(this.ride.id).then(() => this.router.navigateByUrl('tabs/tabs/rides'));\n  }\n\n  public   async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      header: 'Cancel Ride',\n      message: 'Are you sure you want to cancel this ride?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Yes',\n          handler: () => {\n            this.deleteRide();\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}