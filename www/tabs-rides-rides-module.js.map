{"version":3,"sources":["webpack:///./src/app/core/services/ride.service.ts","webpack:///./src/app/pages/tabs/rides/rides-page.component.html","webpack:///./src/app/pages/tabs/rides/rides-page.component.scss","webpack:///./src/app/pages/tabs/rides/rides-page.component.ts","webpack:///./src/app/pages/tabs/rides/rides.module.ts"],"names":[],"mappings":"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","file":"tabs-rides-rides-module.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Ride} from '../../shared/models/Ride';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {Observable} from 'rxjs';\nimport {Request} from '../../shared/models/Request';\nimport {User} from '../../shared/models/User';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RideService {\n    private collectionEndPoint = 'rides';\n\n    constructor(private db: AngularFireDatabase) {\n    }\n\n    public createRide(ride: Ride): Promise<void> {\n        ride.id = this.db.createPushId();\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${ride.id}`).set(ride);\n    }\n\n    public updateRide(ride: Ride): Promise<void> {\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${ride.id}`).update(ride);\n    }\n\n    public deleteRide(rideId: string): Promise<void> {\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${rideId}`).remove();\n    }\n\n    public getRides(): Observable<Ride[]> {\n        return this.db.list<Ride>(this.collectionEndPoint, ref => ref.orderByChild('dateTime')\n            .startAt(new Date().getTime())).valueChanges();\n    }\n\n    public getRidesByUserId(userId: string): Observable<Ride[]> {\n        return this.db.list<Ride>(this.collectionEndPoint, ref => ref.orderByChild('userId').equalTo(userId)).valueChanges();\n    }\n\n    public getRide(rideId: string): Observable<Ride> {\n        return this.db.object<Ride>(`${this.collectionEndPoint}/${rideId}`).valueChanges();\n    }\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title text-center>\\n            My Rides\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" mode=\\\"md\\\">\\n        <ion-segment-button value=\\\"nextRides\\\" mode=\\\"md\\\" checked>\\n            <ion-label>Next Rides</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"history\\\" mode=\\\"md\\\">\\n            <ion-label>History Rides</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n\\n    <div *ngIf=\\\"currentSegment === 'nextRides'\\\" class=\\\"segment\\\">\\n        <ion-card mode=\\\"md\\\" *ngFor=\\\"let currentRide of currentRides\\\"\\n                  [ngClass]=\\\"{ 'booked-ride' : currentRide.ride, 'offered-ride': !currentRide.ride }\\\">\\n            <ion-card-content>\\n                <div *ngIf=\\\"currentRide.ride\\\" (click)=\\\"goToBookedRidePage(currentRide)\\\">\\n                    <h3 class=\\\"booked-ride-title\\\">Booked Ride</h3>\\n                    <ion-card-subtitle>{{currentRide.ride.dateTime | date: 'dd MMM h:mm'}}</ion-card-subtitle>\\n                    <ion-label>{{currentRide.ride.originName}}\\n                         -\\n                        {{currentRide.ride.destinationName}}</ion-label>\\n                </div>\\n                <div *ngIf=\\\"!currentRide.ride\\\" (click)=\\\"goToRideDetailsPage(currentRide)\\\">\\n                    <h3 class=\\\"offered-ride-title\\\">Offered Ride</h3>\\n                    <ion-card-subtitle>{{currentRide.dateTime | date: 'dd MMM h:mm'}}</ion-card-subtitle>\\n                    <ion-label>{{currentRide.originName}}\\n                         -\\n                        {{currentRide.destinationName}}</ion-label>\\n                </div>\\n            </ion-card-content>\\n        </ion-card>\\n        <div class=\\\"segment-no-items\\\">\\n            <ion-label *ngIf=\\\"currentRides.length == 0\\\">You don't have any ride yet.</ion-label>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"currentSegment === 'history'\\\" class=\\\"segment\\\">\\n        <ion-card mode=\\\"md\\\" *ngFor=\\\"let oldRide of oldRides\\\"\\n                  [ngClass]=\\\"{ 'booked-ride' : oldRide.ride, 'offered-ride': !oldRide.ride }\\\">\\n            <ion-card-content>\\n                <div *ngIf=\\\"oldRide.ride\\\" (click)=\\\"goToBookedRidePage(oldRide)\\\">\\n                    <h3 class=\\\"booked-ride-title\\\">Booked Ride</h3>\\n                    <ion-card-subtitle>{{oldRide.ride.dateTime | date: 'dd MMM h:mm'}}</ion-card-subtitle>\\n                    <ion-label>{{oldRide.ride.originName}}\\n                        -\\n                        {{oldRide.ride.destinationName}}</ion-label>\\n                </div>\\n                <div *ngIf=\\\"!oldRide.ride\\\" (click)=\\\"goToRideDetailsPage(oldRide)\\\">\\n                    <h3 class=\\\"offered-ride-title\\\">Offered Ride</h3>\\n                    <ion-card-subtitle>{{oldRide.dateTime | date: 'dd MMM h:mm'}}</ion-card-subtitle>\\n                    <ion-label>{{oldRide.originName}}\\n                        -\\n                        {{oldRide.destinationName}}</ion-label>\\n                </div>\\n            </ion-card-content>\\n        </ion-card>\\n        <div class=\\\"segment-no-items\\\">\\n            <ion-label *ngIf=\\\"oldRides.length == 0\\\">There are no old rides.</ion-label>\\n        </div>\\n    </div>\\n\\n</ion-content>\\n\"","module.exports = \":host .segment {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-flex-direction: column;\\n          flex-direction: column; }\\n  :host .segment .booked-ride {\\n    border-top: 5px solid #002e65; }\\n  :host .segment .offered-ride {\\n    border-top: 5px solid #fe9b2b; }\\n  :host .segment .segment-no-items {\\n    display: -webkit-flex;\\n    display: flex;\\n    -webkit-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-justify-content: center;\\n            justify-content: center;\\n    -webkit-align-items: center;\\n            align-items: center;\\n    padding: 20px; }\\n  :host .segment .offered-ride-title {\\n    font-size: 18px;\\n    color: #fe9b2b; }\\n  :host .segment .booked-ride-title {\\n    font-size: 18px;\\n    color: #002e65; }\\n  :host .sc-ion-card-md-h {\\n  border-radius: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25leWJhL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyL3RmbS9zcmMvYXBwL3BhZ2VzL3RhYnMvcmlkZXMvcmlkZXMtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHFCQUFhO0VBQWIsYUFBYTtFQUNiLDhCQUFzQjtVQUF0QixzQkFBc0IsRUFBQTtFQUgxQjtJQU1NLDZCQUE2QixFQUFBO0VBTm5DO0lBVU0sNkJBQTZCLEVBQUE7RUFWbkM7SUFjTSxxQkFBYTtJQUFiLGFBQWE7SUFDYiw4QkFBc0I7WUFBdEIsc0JBQXNCO0lBQ3RCLCtCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIsMkJBQW1CO1lBQW5CLG1CQUFtQjtJQUNuQixhQUFhLEVBQUE7RUFsQm5CO0lBcUJNLGVBQWU7SUFDZixjQUFjLEVBQUE7RUF0QnBCO0lBeUJNLGVBQWU7SUFDZixjQUFjLEVBQUE7RUExQnBCO0VBOEJJLDZCQUE2QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFicy9yaWRlcy9yaWRlcy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAuc2VnbWVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgLmJvb2tlZC1yaWRlIHtcbiAgICAgIGJvcmRlci10b3A6IDVweCBzb2xpZCAjMDAyZTY1O1xuICAgIH1cblxuICAgIC5vZmZlcmVkLXJpZGUge1xuICAgICAgYm9yZGVyLXRvcDogNXB4IHNvbGlkICNmZTliMmI7XG4gICAgfVxuXG4gICAgLnNlZ21lbnQtbm8taXRlbXMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgIH1cbiAgICAub2ZmZXJlZC1yaWRlLXRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgIGNvbG9yOiAjZmU5YjJiO1xuICAgIH1cbiAgICAuYm9va2VkLXJpZGUtdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgY29sb3I6ICMwMDJlNjU7XG4gICAgfVxuICB9XG4gIC5zYy1pb24tY2FyZC1tZC1oIHtcbiAgICBib3JkZXItcmFkaXVzOiAwcHggIWltcG9ydGFudDtcbiAgfVxuXG59XG4iXX0= */\"","import {Component} from '@angular/core';\nimport {RideService} from '../../../core/services/ride.service';\nimport {Request} from '../../../shared/models/Request';\nimport {User} from '../../../shared/models/User';\nimport {NavigationExtras, Router} from '@angular/router';\nimport {RequestService} from '../../../core/services/request.service';\nimport {Ride} from '../../../shared/models/Ride';\nimport {UserService} from '../../../core/services/user.service';\n\n@Component({\n    selector: 'app-rides',\n    templateUrl: 'rides-page.component.html',\n    styleUrls: ['rides-page.component.scss']\n})\n\nexport class RidesPage {\n    public currentSegment = 'nextRides';\n    private currentUser: User;\n    public requests: Request[];\n    public rides: Ride[];\n\n    public today: number;\n\n\n    public currentRides = [];\n    public oldRides = [];\n\n    constructor(private rideService: RideService,\n                private requestService: RequestService,\n                private userService: UserService,\n                private router: Router) {\n    }\n\n    ionViewWillEnter() {\n        this.currentUser = this.userService.user.getValue();\n        this.today = new Date().getTime();\n        this.currentRides = [];\n        this.getRides();\n\n\n    }\n\n    segmentChanged(ev: any) {\n        this.currentSegment = ev.detail.value;\n    }\n\n    public getRides(): void {\n        this.currentRides = [];\n        this.oldRides = [];\n        this.rideService.getRidesByUserId(this.currentUser.id).subscribe(rides => {\n            console.log(rides);\n            rides.forEach((ride: Ride) => {\n                if (ride.dateTime >= this.today) {\n                    this.currentRides.push(ride);\n                } else {\n                    this.oldRides.push(ride);\n                }\n            });\n            this.getRequests();\n        });\n    }\n\n\n    public getRequests(): void {\n        this.requestService.getRequestsByUserId(this.currentUser.id).subscribe(requests => {\n            console.log(requests);\n            requests.forEach((request: Request) => {\n                if (request.ride.dateTime >= this.today) {\n                    this.currentRides.push(request);\n                    console.log(this.currentRides);\n                } else {\n                    this.oldRides.push(request);\n                }\n            });\n            this.sortByDate(this.currentRides);\n            this.sortByDate(this.oldRides);\n        });\n    }\n\n    public sortByDate(array: any[]): any[] {\n         return array.sort((a, b) => {\n            a = a.ride ? a.ride : a;\n            b = b.ride ? b.ride : b;\n            return a.dateTime - b.dateTime;\n\n        });\n\n    }\n\n    public goToRideDetailsPage(ride: Ride): void {\n        const navigationExtras: NavigationExtras = {\n            state: {\n                rideId: ride.id\n            }\n        };\n        this.router.navigate(['ride-plan'], navigationExtras);\n    }\n\n    public goToBookedRidePage(request: Request): void {\n        const navigationExtras: NavigationExtras = {\n            state: {\n                requestId: request.id\n            }\n        };\n        this.router.navigate(['booked-ride-plan'], navigationExtras);\n    }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RidesPage } from './rides-page.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: RidesPage }])\n  ],\n  declarations: [RidesPage]\n})\nexport class RidesPageModule {}\n"],"sourceRoot":""}