{"version":3,"sources":["webpack:///./src/app/pages/tabs/rides/booked-ride-plan/booked-ride-plan.module.ts","webpack:///./src/app/pages/tabs/rides/booked-ride-plan/booked-ride-plan.page.html","webpack:///./src/app/pages/tabs/rides/booked-ride-plan/booked-ride-plan.page.scss","webpack:///./src/app/pages/tabs/rides/booked-ride-plan/booked-ride-plan.page.ts"],"names":[],"mappings":"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","file":"pages-tabs-rides-booked-ride-plan-booked-ride-plan-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookedRidePlanPage } from './booked-ride-plan.page';\nimport {AgmCoreModule} from '@agm/core';\nimport {AgmDirectionModule} from 'agm-direction';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookedRidePlanPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBEavHbLwLZhyr1L8psKmof-84BlLqbRn8',\n      libraries: ['places']\n    }),\n    AgmDirectionModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BookedRidePlanPage]\n})\nexport class BookedRidePlanPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title>Ride Plan</ion-title>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card>\\n        <div class=\\\"map\\\">\\n            <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"zoom\\\" [streetViewControl]=\\\"false\\\"\\n                     [zoomControl]=\\\"false\\\">\\n                <agm-direction *ngIf=\\\"direction\\\" [origin]=\\\"direction.origin\\\"\\n                               [destination]=\\\"direction?.destination\\\"></agm-direction>\\n                <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" *ngIf=\\\"!direction\\\"></agm-marker>\\n            </agm-map>\\n            <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n                <ion-fab-button>\\n                    <ion-icon name=\\\"pin\\\"></ion-icon>\\n                </ion-fab-button>\\n            </ion-fab>\\n        </div>\\n        <ion-item class=\\\"card-driver-container\\\">\\n            <div class=\\\"user-info\\\" (click)=\\\"goToDriverDetailsPage()\\\">\\n                <ion-avatar>\\n                    <img [src]=\\\"driver?.photo\\\">\\n                </ion-avatar>\\n                <div class=\\\"user-name\\\">\\n                    <label>{{driver?.name}}</label>\\n                    <div>\\n                        <ion-icon name=\\\"star\\\" slot=\\\"start\\\"></ion-icon>\\n                        <label>{{driver?.averageRating}}/5 ({{driver?.numberOfRatings}})</label>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <ion-button (click)=\\\"contactTheDriver()\\\">Contact</ion-button>\\n        </ion-item>\\n        <ion-item>\\n            <label>Date and time: {{request?.ride.dateTime | date:'dd MMM h:mm'}}</label>\\n        </ion-item>\\n        <ion-item>\\n            <label>{{request?.ride.originName}} - {{request?.ride.destinationName}}</label>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label><a>Available seats: </a>{{request?.ride.numberOfSeats}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label><a>Status: </a>{{request?.state}} </ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=!request?.ride.isFinished>\\n            <ion-label (click)=\\\"presentAlertConfirm()\\\" fill=\\\"clear\\\" color=\\\"danger\\\">Cancel Ride</ion-label>\\n        </ion-item>\\n\\n        <ion-item *ngIf=request?.ride.isFinished>\\n            <ion-label (click)=\\\"contact()\\\" fill=\\\"clear\\\" color=\\\"danger\\\">Any problems during this ride? Contact us</ion-label>\\n        </ion-item>\\n\\n\\n        <div class=\\\"footer\\\" *ngIf=!request?.ride.isFinished >\\n            <ion-button  class=\\\"start-button\\\" (click)=\\\"openModal()\\\">Start ride</ion-button>\\n        </div>\\n    </ion-card>\\n</ion-content>\\n\"","module.exports = \":host .card-driver-container {\\n  display: -webkit-flex;\\n  display: flex; }\\n\\n:host agm-map {\\n  height: 300px; }\\n\\n:host .card-driver-container {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-justify-content: space-between;\\n          justify-content: space-between; }\\n\\n:host .card-driver-container .user-info {\\n    display: -webkit-flex;\\n    display: flex;\\n    -webkit-align-items: center;\\n            align-items: center;\\n    width: 100%; }\\n\\n:host .card-driver-container .user-info ion-avatar {\\n      width: 35px;\\n      height: 35px; }\\n\\n:host .card-driver-container .user-info .user-name {\\n      margin-left: 10px;\\n      display: -webkit-flex;\\n      display: flex;\\n      -webkit-flex-direction: column;\\n              flex-direction: column; }\\n\\n:host .footer {\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-justify-content: center;\\n          justify-content: center;\\n  -webkit-align-items: center;\\n          align-items: center;\\n  margin: 10px; }\\n\\n:host .request-buttons-container {\\n  display: -webkit-flex;\\n  display: flex; }\\n\\n:host .request-buttons-container ion-fab-button {\\n    --box-shadow: none;\\n    width: 35px;\\n    height: 35px;\\n    margin: 5px; }\\n\\n:host .request-buttons-container .accept-button {\\n    --background: #0ec254; }\\n\\n:host .start-button {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb25leWJhL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyL3RmbS9zcmMvYXBwL3BhZ2VzL3RhYnMvcmlkZXMvYm9va2VkLXJpZGUtcGxhbi9ib29rZWQtcmlkZS1wbGFuLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHFCQUFhO0VBQWIsYUFBYSxFQUFBOztBQUZqQjtFQU1JLGFBQWEsRUFBQTs7QUFOakI7RUFVSSxxQkFBYTtFQUFiLGFBQWE7RUFDYixzQ0FBOEI7VUFBOUIsOEJBQThCLEVBQUE7O0FBWGxDO0lBY00scUJBQWE7SUFBYixhQUFhO0lBQ2IsMkJBQW1CO1lBQW5CLG1CQUFtQjtJQUNuQixXQUFXLEVBQUE7O0FBaEJqQjtNQW1CUSxXQUFXO01BQ1gsWUFBWSxFQUFBOztBQXBCcEI7TUF3QlEsaUJBQWlCO01BQ2pCLHFCQUFhO01BQWIsYUFBYTtNQUNiLDhCQUFzQjtjQUF0QixzQkFBc0IsRUFBQTs7QUExQjlCO0VBZ0NJLHFCQUFhO0VBQWIsYUFBYTtFQUNiLCtCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIsMkJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQixZQUFZLEVBQUE7O0FBbkNoQjtFQXVDSSxxQkFBYTtFQUFiLGFBQWEsRUFBQTs7QUF2Q2pCO0lBMENNLGtCQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXLEVBQUE7O0FBN0NqQjtJQWlETSxxQkFBYSxFQUFBOztBQWpEbkI7RUFzREksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFicy9yaWRlcy9ib29rZWQtcmlkZS1wbGFuL2Jvb2tlZC1yaWRlLXBsYW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAuY2FyZC1kcml2ZXItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgYWdtLW1hcCB7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgfVxuXG4gIC5jYXJkLWRyaXZlci1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgLnVzZXItaW5mbyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICBpb24tYXZhdGFyIHtcbiAgICAgICAgd2lkdGg6IDM1cHg7XG4gICAgICAgIGhlaWdodDogMzVweDtcbiAgICAgIH1cblxuICAgICAgLnVzZXItbmFtZSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5mb290ZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW46IDEwcHg7XG4gIH1cblxuICAucmVxdWVzdC1idXR0b25zLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIGlvbi1mYWItYnV0dG9uIHtcbiAgICAgIC0tYm94LXNoYWRvdzogbm9uZTtcbiAgICAgIHdpZHRoOiAzNXB4O1xuICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgbWFyZ2luOiA1cHg7XG4gICAgfVxuXG4gICAgLmFjY2VwdC1idXR0b24ge1xuICAgICAgLS1iYWNrZ3JvdW5kOiAjMGVjMjU0O1xuICAgIH1cbiAgfVxuXG4gIC5zdGFydC1idXR0b24ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {User} from '../../../../shared/models/User';\nimport {Request} from '../../../../shared/models/Request';\nimport {UserService} from '../../../../core/services/user.service';\nimport {RidePage} from '../ride/ride.page';\nimport {AlertController, ModalController} from '@ionic/angular';\nimport {MapsAPILoader} from '@agm/core';\nimport DirectionsRequest = google.maps.DirectionsRequest;\nimport DirectionsService = google.maps.DirectionsService;\nimport {RequestService} from '../../../../core/services/request.service';\nimport {Chat} from '../../../../shared/models/Chat';\nimport {ChatService} from '../../../../core/services/chat.service';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {EmailComposer} from '@ionic-native/email-composer/ngx';\n\n@Component({\n  selector: 'app-booked-ride-plan',\n  templateUrl: './booked-ride-plan.page.html',\n  styleUrls: ['./booked-ride-plan.page.scss'],\n})\nexport class BookedRidePlanPage implements OnInit {\n  public request: Request;\n  private requestId: string;\n  public driver: User;\n  public availableSeats: number;\n\n\n  private latitude: number;\n  private longitude: number;\n  private zoom: number;\n  private direction: DirectionsRequest;\n  private directionsService = new DirectionsService();\n  public duration;\n  public distance;\n  public today: number;\n\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private modalController: ModalController,\n              private userService: UserService,\n              private requestService: RequestService,\n              private mapsAPILoader: MapsAPILoader,\n              private chatService: ChatService,\n              private db: AngularFireDatabase,\n              private alertController: AlertController,\n              private emailComposer: EmailComposer) {\n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.requestId = this.router.getCurrentNavigation().extras.state.requestId;\n        this.getRequest();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.today = new Date().getTime();\n  }\n\n  ionViewWillEnter() {\n    if (this.requestId) {\n      this.getRequest();\n    }\n  }\n\n  private getRequest(): void {\n    this.requestService.getRequest(this.requestId).subscribe(request => {\n      this.request = request;\n      this.getDriver();\n      this.getAvaliableSeats();\n      this.mapsAPILoader.load().then(() => {\n        this.getDirection();\n      });\n    });\n  }\n\n  public getDirection(): void {\n    this.direction = {\n      origin: this.request.ride.origin,\n      destination: this.request.ride.destination,\n      travelMode: google.maps.TravelMode.DRIVING\n    };\n\n    this.directionsService.route(this.direction, result => {\n      this.duration = result.routes[0].legs[0].duration.text;\n      this.distance = result.routes[0].legs[0].distance.text;\n    });\n  }\n\n  private getDriver(): void {\n    this.userService.getUser(this.request.ride.userId).subscribe(user => this.driver = user);\n  }\n\n  private getAvaliableSeats(): void {\n    const seatsNumber = this.request.ride.numberOfSeats;\n    let passengerNumber = 0;\n    if (this.request.ride.seatedUserIds) {\n        passengerNumber = this.request.ride.seatedUserIds.length;\n    }\n    this.availableSeats = seatsNumber - passengerNumber;\n  }\n\n  async openModal() {\n    const modal = await this.modalController.create({\n      component: RidePage,\n      componentProps: {\n        ride: this.request.ride\n      }\n    });\n\n    return await modal.present();\n  }\n\n  public goToDriverDetailsPage(): void {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        userId: this.request.ride.userId\n      }\n    };\n    this.router.navigate(['public-profile'], navigationExtras);\n  }\n\n  public contactTheDriver(): void {\n    let chat: Chat = {\n      passengerUser: this.request.userId,\n      driverUser: this.driver.id,\n      rideId: this.request.ride.id\n    };\n\n    this.chatService.getChatByRideId(this.request.ride.id).subscribe((chats: Chat[]) => {\n      if (chats[0]) {\n        chat = chats[0];\n        const navigationExtras: NavigationExtras = {\n          state: {\n            chatId: chat.id\n          }\n        };\n        this.router.navigate(['chat'], navigationExtras);\n      } else {\n        chat.id = this.db.createPushId();\n        this.chatService.createChat(chat).then(result => {\n          const navigationExtras: NavigationExtras = {\n            state: {\n              chatId: chat.id\n            }\n          };\n          this.router.navigate(['chat'], navigationExtras);\n        });\n      }\n    });\n\n  }\n\n  public deleteRequest(): void {\n\n    // Send notification to driver\n\n    this.requestService.deleteRequest(this.request.id).then(() =>\n        this.router.navigate(['tabs/tabs/rides']));\n  }\n\n  public   async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      header: 'Cancel Ride',\n      message: 'Are you sure you want to cancel this ride?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n          }\n        }, {\n          text: 'Yes',\n          handler: () => {\n            this.deleteRequest();\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  private contact(): void {\n    const email = {\n      to: 'moneybahr@gmail.com',\n      isHtml: true\n    };\n    this.emailComposer.open(email);\n  }\n\n}\n"],"sourceRoot":""}